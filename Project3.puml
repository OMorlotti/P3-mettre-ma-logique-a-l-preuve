@startuml

Class EscapeGame {
m_config: Config
m_logger: Logger
menu(): boolean
start(): void
}

class Config {
load(): void
}

class Log {
getLogger(String name, boolean isDeveloperMode): Logger
}

abstract class AbstractMode {
m_config: Config
m_logger: Logger
generateComparison() int[]
playATurn(int attempt, AbstractUser user, int[] combination, int[] comparison) boolean
start(): int
}

class ModeChallenger {
m_config: Config
m_logger: Logger
start(): int
}

class ModeDefender {
m_config: Config
m_logger: Logger
start(): int
}

class ModeDual {
m_config: Config
m_logger: Logger
start(): int
}


abstract class AbstractUser {
config: Config
generateCombination(): int[]
guessCombination(int[] comparison): int[]
}

class AI {
config: Config
generateCombination(): int[]
guessCombination(int[] comparison): int[]
}

class Human {
config: Config
generateCombination(): int[]
guessCombination(int[] comparison): int[]
}

class DumbAI {
config: Config
generateCombination(): int[]
guessCombination(int[] comparison): int[]
}

AbstractMode <|--- ModeChallenger
AbstractMode <|--- ModeDefender
AbstractMode <|--- ModeDual

AbstractUser <|--- AI
AbstractUser <|--- Human

AI <|--- DumbAI

EscapeGame -- AbstractMode
EscapeGame -- Log

EscapeGame *-- Config

AbstractMode -- AbstractUser

@enduml